{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _utils = require('@material-ui/utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction mergeClasses() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var baseClasses = options.baseClasses,\n      newClasses = options.newClasses,\n      Component = options.Component;\n\n  if (!newClasses) {\n    return baseClasses;\n  }\n\n  var nextClasses = Object.assign({}, baseClasses);\n\n  if (process.env.NODE_ENV !== 'production' && typeof newClasses === 'string') {\n    (0, _warning2.default)(false, ['Material-UI: the value `' + newClasses + '` ' + ('provided to the classes property of ' + (0, _utils.getDisplayName)(Component) + ' is incorrect.'), 'You might want to use the className property instead.'].join('\\n'));\n    return baseClasses;\n  }\n\n  Object.keys(newClasses).forEach(function (key) {\n    (0, _warning2.default)(baseClasses[key] || !newClasses[key], ['Material-UI: the key `' + key + '` ' + ('provided to the classes property is not implemented in ' + (0, _utils.getDisplayName)(Component) + '.'), 'You can only override one of the following: ' + Object.keys(baseClasses).join(',') + '.'].join('\\n'));\n    (0, _warning2.default)(!newClasses[key] || typeof newClasses[key] === 'string', ['Material-UI: the key `' + key + '` ' + ('provided to the classes property is not valid for ' + (0, _utils.getDisplayName)(Component) + '.'), 'You need to provide a non empty string instead of: ' + newClasses[key] + '.'].join('\\n'));\n\n    if (newClasses[key]) {\n      nextClasses[key] = baseClasses[key] + ' ' + newClasses[key];\n    }\n  });\n  return nextClasses;\n}\n\nexports.default = mergeClasses;","map":{"version":3,"sources":["/home/nick/Desktop/blog_app/client/node_modules/@bit/mui-org.material-ui.styles/dist/styles/mergeClasses.js"],"names":["Object","defineProperty","exports","value","_warning","require","_warning2","_interopRequireDefault","_utils","obj","__esModule","default","mergeClasses","options","arguments","length","undefined","baseClasses","newClasses","Component","nextClasses","assign","process","env","NODE_ENV","getDisplayName","join","keys","forEach","key"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAIC,SAAS,GAAGC,sBAAsB,CAACH,QAAD,CAAtC;;AAEA,IAAII,MAAM,GAAGH,OAAO,CAAC,oBAAD,CAApB;;AAEA,SAASE,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,SAASG,YAAT,GAAwB;AACtB,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,MAAIG,WAAW,GAAGJ,OAAO,CAACI,WAA1B;AAAA,MACIC,UAAU,GAAGL,OAAO,CAACK,UADzB;AAAA,MAEIC,SAAS,GAAGN,OAAO,CAACM,SAFxB;;AAKA,MAAI,CAACD,UAAL,EAAiB;AACf,WAAOD,WAAP;AACD;;AAED,MAAIG,WAAW,GAAGpB,MAAM,CAACqB,MAAP,CAAc,EAAd,EAAkBJ,WAAlB,CAAlB;;AAEA,MAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,OAAON,UAAP,KAAsB,QAAnE,EAA6E;AAC3E,KAAC,GAAGZ,SAAS,CAACK,OAAd,EAAuB,KAAvB,EAA8B,CAAC,6BAA6BO,UAA7B,GAA0C,IAA1C,IAAkD,yCAAyC,CAAC,GAAGV,MAAM,CAACiB,cAAX,EAA2BN,SAA3B,CAAzC,GAAiF,gBAAnI,CAAD,EAAuJ,uDAAvJ,EAAgNO,IAAhN,CAAqN,IAArN,CAA9B;AAEA,WAAOT,WAAP;AACD;;AAEDjB,EAAAA,MAAM,CAAC2B,IAAP,CAAYT,UAAZ,EAAwBU,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAC7C,KAAC,GAAGvB,SAAS,CAACK,OAAd,EAAuBM,WAAW,CAACY,GAAD,CAAX,IAAoB,CAACX,UAAU,CAACW,GAAD,CAAtD,EAA6D,CAAC,2BAA2BA,GAA3B,GAAiC,IAAjC,IAAyC,4DAA4D,CAAC,GAAGrB,MAAM,CAACiB,cAAX,EAA2BN,SAA3B,CAA5D,GAAoG,GAA7I,CAAD,EAAoJ,iDAAiDnB,MAAM,CAAC2B,IAAP,CAAYV,WAAZ,EAAyBS,IAAzB,CAA8B,GAA9B,CAAjD,GAAsF,GAA1O,EAA+OA,IAA/O,CAAoP,IAApP,CAA7D;AAEA,KAAC,GAAGpB,SAAS,CAACK,OAAd,EAAuB,CAACO,UAAU,CAACW,GAAD,CAAX,IAAoB,OAAOX,UAAU,CAACW,GAAD,CAAjB,KAA2B,QAAtE,EAAgF,CAAC,2BAA2BA,GAA3B,GAAiC,IAAjC,IAAyC,uDAAuD,CAAC,GAAGrB,MAAM,CAACiB,cAAX,EAA2BN,SAA3B,CAAvD,GAA+F,GAAxI,CAAD,EAA+I,wDAAwDD,UAAU,CAACW,GAAD,CAAlE,GAA0E,GAAzN,EAA8NH,IAA9N,CAAmO,IAAnO,CAAhF;;AAEA,QAAIR,UAAU,CAACW,GAAD,CAAd,EAAqB;AACnBT,MAAAA,WAAW,CAACS,GAAD,CAAX,GAAmBZ,WAAW,CAACY,GAAD,CAAX,GAAmB,GAAnB,GAAyBX,UAAU,CAACW,GAAD,CAAtD;AACD;AACF,GARD;AAUA,SAAOT,WAAP;AACD;;AAEDlB,OAAO,CAACS,OAAR,GAAkBC,YAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _utils = require('@material-ui/utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction mergeClasses() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var baseClasses = options.baseClasses,\n      newClasses = options.newClasses,\n      Component = options.Component;\n\n\n  if (!newClasses) {\n    return baseClasses;\n  }\n\n  var nextClasses = Object.assign({}, baseClasses);\n\n  if (process.env.NODE_ENV !== 'production' && typeof newClasses === 'string') {\n    (0, _warning2.default)(false, ['Material-UI: the value `' + newClasses + '` ' + ('provided to the classes property of ' + (0, _utils.getDisplayName)(Component) + ' is incorrect.'), 'You might want to use the className property instead.'].join('\\n'));\n\n    return baseClasses;\n  }\n\n  Object.keys(newClasses).forEach(function (key) {\n    (0, _warning2.default)(baseClasses[key] || !newClasses[key], ['Material-UI: the key `' + key + '` ' + ('provided to the classes property is not implemented in ' + (0, _utils.getDisplayName)(Component) + '.'), 'You can only override one of the following: ' + Object.keys(baseClasses).join(',') + '.'].join('\\n'));\n\n    (0, _warning2.default)(!newClasses[key] || typeof newClasses[key] === 'string', ['Material-UI: the key `' + key + '` ' + ('provided to the classes property is not valid for ' + (0, _utils.getDisplayName)(Component) + '.'), 'You need to provide a non empty string instead of: ' + newClasses[key] + '.'].join('\\n'));\n\n    if (newClasses[key]) {\n      nextClasses[key] = baseClasses[key] + ' ' + newClasses[key];\n    }\n  });\n\n  return nextClasses;\n}\n\nexports.default = mergeClasses;\n\n//# sourceMappingURL=mergeClasses.js.map"]},"metadata":{},"sourceType":"script"}